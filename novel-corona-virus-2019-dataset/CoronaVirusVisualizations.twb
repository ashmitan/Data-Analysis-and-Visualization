<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0221.0754                               -->
<workbook original-version='18.1' source-build='2019.4.4 (20194.20.0221.0754)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource caption='covid_19_data' inline='true' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_data' name='textscan.08z4btx0a35m801f51wdg10hlvvw'>
            <connection class='textscan' directory='C:/Users/Ashmita/Desktop/Data Science Assignments/novel-corona-virus-2019-dataset' filename='covid_19_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08z4btx0a35m801f51wdg10hlvvw' name='covid_19_data.csv' table='[covid_19_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='Last Update' ordinal='4' />
            <column datatype='real' name='Confirmed' ordinal='5' />
            <column datatype='real' name='Deaths' ordinal='6' />
            <column datatype='real' name='Recovered' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SNo]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>SNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObservationDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[ObservationDate]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>ObservationDate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_data.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot; Norfolk County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Alameda County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Ashland, NE&quot;' value='&quot;Nebraska&quot;' />
          <semantic-value key='&quot;Bennington County, VT&quot;' value='&quot;Vermont&quot;' />
          <semantic-value key='&quot;Bergen County, NJ&quot;' value='&quot;New Jersey&quot;' />
          <semantic-value key='&quot;Berkeley, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Berkshire County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Boston, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Broward County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Carver County, MN&quot;' value='&quot;Minnesota&quot;' />
          <semantic-value key='&quot;Charleston County, SC&quot;' value='&quot;South Carolina&quot;' />
          <semantic-value key='&quot;Charlotte County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Chatham County, NC&quot;' value='&quot;North Carolina&quot;' />
          <semantic-value key='&quot;Cherokee County, GA&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Chicago&quot;' value='&quot;Illinois&quot;' />
          <semantic-value key='&quot;Chicago, IL&quot;' value='&quot;Illinois&quot;' />
          <semantic-value key='&quot;Clark County, NV&quot;' value='&quot;Nevada&quot;' />
          <semantic-value key='&quot;Clark County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Cobb County, GA&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Collin County, TX&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;Contra Costa County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Cook County, IL&quot;' value='&quot;Illinois&quot;' />
          <semantic-value key='&quot;Davidson County, TN&quot;' value='&quot;Tennessee&quot;' />
          <semantic-value key='&quot;Davis County, UT&quot;' value='&quot;Utah&quot;' />
          <semantic-value key='&quot;Delaware County, PA&quot;' value='&quot;Pennsylvania&quot;' />
          <semantic-value key='&quot;Denver County, CO&quot;' value='&quot;Colorado&quot;' />
          <semantic-value key='&quot;Douglas County, CO&quot;' value='&quot;Colorado&quot;' />
          <semantic-value key='&quot;Douglas County, NE&quot;' value='&quot;Nebraska&quot;' />
          <semantic-value key='&quot;Douglas County, OR&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;El Paso County, CO&quot;' value='&quot;Colorado&quot;' />
          <semantic-value key='&quot;Fairfax County, VA&quot;' value='&quot;Virginia&quot;' />
          <semantic-value key='&quot;Fairfield County, CT&quot;' value='&quot;Connecticut&quot;' />
          <semantic-value key='&quot;Fayette County, KY&quot;' value='&quot;Kentucky&quot;' />
          <semantic-value key='&quot;Floyd County, GA&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Fort Bend County, TX&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;Fresno County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Fulton County, GA&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Grafton County, NH&quot;' value='&quot;New Hampshire&quot;' />
          <semantic-value key='&quot;Grant County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Harford County, MD&quot;' value='&quot;Maryland&quot;' />
          <semantic-value key='&quot;Harris County, TX&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;Harrison County, KY&quot;' value='&quot;Kentucky&quot;' />
          <semantic-value key='&quot;Hendricks County, IN&quot;' value='&quot;Indiana&quot;' />
          <semantic-value key='&quot;Hillsborough, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Honolulu County, HI&quot;' value='&quot;Hawaii&quot;' />
          <semantic-value key='&quot;Hudson County, NJ&quot;' value='&quot;New Jersey&quot;' />
          <semantic-value key='&quot;Humboldt County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Jackson County, OR &quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;Jefferson County, KY&quot;' value='&quot;Kentucky&quot;' />
          <semantic-value key='&quot;Jefferson County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Jefferson Parish, LA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Johnson County, IA&quot;' value='&quot;Indiana&quot;' />
          <semantic-value key='&quot;Johnson County, KS&quot;' value='&quot;Kansas&quot;' />
          <semantic-value key='&quot;Kershaw County, SC&quot;' value='&quot;South Carolina&quot;' />
          <semantic-value key='&quot;King County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Kittitas County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Klamath County, OR&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;Lackland, TX&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;Lackland, TX (From Diamond Princess)&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;Lee County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Los Angeles, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Madera County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Madison, WI&quot;' value='&quot;Wisconsin&quot;' />
          <semantic-value key='&quot;Manatee County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Maricopa County, AZ&quot;' value='&quot;Arizona&quot;' />
          <semantic-value key='&quot;Marion County, IN&quot;' value='&quot;Indiana&quot;' />
          <semantic-value key='&quot;Marion County, OR&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;Middlesex County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Montgomery County, MD&quot;' value='&quot;Maryland&quot;' />
          <semantic-value key='&quot;Montgomery County, PA&quot;' value='&quot;Pennsylvania&quot;' />
          <semantic-value key='&quot;Montgomery County, TX&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;Nassau County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;New York City, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;New York County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Norfolk County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Norwell County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Okaloosa County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Omaha, NE (From Diamond Princess)&quot;' value='&quot;Nebraska&quot;' />
          <semantic-value key='&quot;Orange County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Orange, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Pierce County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Pinal County, AZ&quot;' value='&quot;Arizona&quot;' />
          <semantic-value key='&quot;Placer County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Plymouth County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Polk County, GA&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Portland, OR&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;Providence County, RI&quot;' value='&quot;Rhode Island&quot;' />
          <semantic-value key='&quot;Providence, RI&quot;' value='&quot;Rhode Island&quot;' />
          <semantic-value key='&quot;Queens County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Ramsey County, MN&quot;' value='&quot;Minnesota&quot;' />
          <semantic-value key='&quot;Riverside County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Rockingham County, NH&quot;' value='&quot;New Hampshire&quot;' />
          <semantic-value key='&quot;Rockland County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Sacramento County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;San Antonio, TX&quot;' value='&quot;Texas&quot;' />
          <semantic-value key='&quot;San Benito, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;San Diego County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;San Francisco County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;San Mateo, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Santa Clara County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Santa Clara, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Santa Cruz County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Santa Rosa County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Sarasota, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Saratoga County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Seattle, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Shasta County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Shelby County, TN&quot;' value='&quot;Tennessee&quot;' />
          <semantic-value key='&quot;Snohomish County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Sonoma County, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Spartanburg County, SC&quot;' value='&quot;South Carolina&quot;' />
          <semantic-value key='&quot;Spokane County, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;St. Louis County, MO&quot;' value='&quot;Missouri&quot;' />
          <semantic-value key='&quot;Suffolk County, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Suffolk County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Summit County, CO&quot;' value='&quot;Colorado&quot;' />
          <semantic-value key='&quot;Tempe, AZ&quot;' value='&quot;Arizona&quot;' />
          <semantic-value key='&quot;Travis, CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Travis, CA (From Diamond Princess)&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Tulsa County, OK&quot;' value='&quot;Oklahoma&quot;' />
          <semantic-value key='&quot;Ulster County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Umatilla, OR&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;Unassigned Location, VT&quot;' value='&quot;Vermont&quot;' />
          <semantic-value key='&quot;Unassigned Location, WA&quot;' value='&quot;Washington&quot;' />
          <semantic-value key='&quot;Unknown Location, MA&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Volusia County, FL&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Wake County, NC&quot;' value='&quot;North Carolina&quot;' />
          <semantic-value key='&quot;Washington County, OR&quot;' value='&quot;Oregon&quot;' />
          <semantic-value key='&quot;Washoe County, NV&quot;' value='&quot;Nevada&quot;' />
          <semantic-value key='&quot;Wayne County, PA&quot;' value='&quot;Pennsylvania&quot;' />
          <semantic-value key='&quot;Westchester County, NY&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;Williamson County, TN&quot;' value='&quot;Tennessee&quot;' />
          <semantic-value key='&quot;Yolo County, CA&quot;' value='&quot;California&quot;' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='S No' datatype='integer' name='[SNo]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Country/Region]</field>
          <field>[Province/State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.464286' measure-ordering='alphabetic' measure-percentage='0.535714' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#2e7f46'>
              <bucket>&quot;Mainland China&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8eb858'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#c0c55d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Recovered:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed Cases for specific locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vr9if50mwid2i1dcetu40ehxzf4'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
              </semantic-values>
            </column>
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ObservationDate]' derivation='Month-Trunc' name='[tmn:ObservationDate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mainland China&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' direction='ASC' />
          <slices>
            <column>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[tmn:ObservationDate:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[tmn:ObservationDate:qk]' value='185' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' />
              <text column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='221' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='729' />
                <format attr='maxwidth' value='729' />
                <format attr='minheight' value='692' />
                <format attr='maxheight' value='692' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]</rows>
        <cols>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[tmn:ObservationDate:qk]</cols>
      </table>
      <simple-id uuid='{0DA338B1-7D8F-40AB-9CD9-E77315953E81}' />
    </worksheet>
    <worksheet name='Confirmed Cases over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vr9if50mwid2i1dcetu40ehxzf4'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column-instance column='[ObservationDate]' derivation='Day' name='[dy:ObservationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ObservationDate]' derivation='Month' name='[mn:ObservationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[mn:ObservationDate:ok]' value='144' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]</rows>
        <cols>([federated.1vr9if50mwid2i1dcetu40ehxzf4].[mn:ObservationDate:ok] / [federated.1vr9if50mwid2i1dcetu40ehxzf4].[dy:ObservationDate:ok])</cols>
      </table>
      <simple-id uuid='{C0AC8990-ACE3-485F-A516-9F99E9A2E57F}' />
    </worksheet>
    <worksheet name='Death rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' />
          </datasources>
          <datasource-dependencies datasource='federated.1vr9if50mwid2i1dcetu40ehxzf4'>
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column-instance column='[ObservationDate]' derivation='None' name='[none:ObservationDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Deaths:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Deaths:qk]</rows>
        <cols>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:ObservationDate:qk]</cols>
      </table>
      <simple-id uuid='{F5C6D6BF-D35F-401D-B6B5-267FB6A030DB}' />
    </worksheet>
    <worksheet name='Geographical spread'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vr9if50mwid2i1dcetu40ehxzf4'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]' field-type='quantitative' max='22292660.799151253' min='-16128859.904834196' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]' field-type='quantitative' max='12877765.152789008' min='-6453818.6427846765' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' />
              <color column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='orange_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]</rows>
        <cols>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B5DADC32-E3B6-4168-90A4-E8A124663EB4}' />
    </worksheet>
    <worksheet name='Geographical spread in US'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vr9if50mwid2i1dcetu40ehxzf4'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
              </semantic-values>
            </column>
            <column aggregation='None' datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot; Norfolk County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Alameda County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Ashland, NE&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;Bennington County, VT&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;Bergen County, NJ&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;Berkeley, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Berkshire County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Boston, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Broward County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Carver County, MN&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;Charleston County, SC&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;Charlotte County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Chatham County, NC&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;Cherokee County, GA&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Chicago&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;Chicago, IL&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;Clark County, NV&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;Clark County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Cobb County, GA&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Collin County, TX&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;Contra Costa County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Cook County, IL&quot;' value='&quot;Illinois&quot;' />
                <semantic-value key='&quot;Davidson County, TN&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;Davis County, UT&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;Delaware County, PA&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;Denver County, CO&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;Douglas County, CO&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;Douglas County, NE&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;Douglas County, OR&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;El Paso County, CO&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;Fairfax County, VA&quot;' value='&quot;Virginia&quot;' />
                <semantic-value key='&quot;Fairfield County, CT&quot;' value='&quot;Connecticut&quot;' />
                <semantic-value key='&quot;Fayette County, KY&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;Floyd County, GA&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Fort Bend County, TX&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;Fresno County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Fulton County, GA&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Grafton County, NH&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;Grant County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Harford County, MD&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;Harris County, TX&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;Harrison County, KY&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;Hendricks County, IN&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;Hillsborough, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Honolulu County, HI&quot;' value='&quot;Hawaii&quot;' />
                <semantic-value key='&quot;Hudson County, NJ&quot;' value='&quot;New Jersey&quot;' />
                <semantic-value key='&quot;Humboldt County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Jackson County, OR &quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;Jefferson County, KY&quot;' value='&quot;Kentucky&quot;' />
                <semantic-value key='&quot;Jefferson County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Jefferson Parish, LA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Johnson County, IA&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;Johnson County, KS&quot;' value='&quot;Kansas&quot;' />
                <semantic-value key='&quot;Kershaw County, SC&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;King County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Kittitas County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Klamath County, OR&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;Lackland, TX&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;Lackland, TX (From Diamond Princess)&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;Lee County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Los Angeles, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Madera County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Madison, WI&quot;' value='&quot;Wisconsin&quot;' />
                <semantic-value key='&quot;Manatee County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Maricopa County, AZ&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;Marion County, IN&quot;' value='&quot;Indiana&quot;' />
                <semantic-value key='&quot;Marion County, OR&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;Middlesex County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Montgomery County, MD&quot;' value='&quot;Maryland&quot;' />
                <semantic-value key='&quot;Montgomery County, PA&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;Montgomery County, TX&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;Nassau County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;New York City, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;New York County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Norfolk County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Norwell County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Okaloosa County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Omaha, NE (From Diamond Princess)&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;Orange County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Orange, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Pierce County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Pinal County, AZ&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;Placer County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Plymouth County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Polk County, GA&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Portland, OR&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;Providence County, RI&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;Providence, RI&quot;' value='&quot;Rhode Island&quot;' />
                <semantic-value key='&quot;Queens County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Ramsey County, MN&quot;' value='&quot;Minnesota&quot;' />
                <semantic-value key='&quot;Riverside County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Rockingham County, NH&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;Rockland County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Sacramento County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;San Antonio, TX&quot;' value='&quot;Texas&quot;' />
                <semantic-value key='&quot;San Benito, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;San Diego County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;San Francisco County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;San Mateo, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Santa Clara County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Santa Clara, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Santa Cruz County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Santa Rosa County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Sarasota, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Saratoga County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Seattle, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Shasta County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Shelby County, TN&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;Snohomish County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Sonoma County, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Spartanburg County, SC&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;Spokane County, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;St. Louis County, MO&quot;' value='&quot;Missouri&quot;' />
                <semantic-value key='&quot;Suffolk County, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Suffolk County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Summit County, CO&quot;' value='&quot;Colorado&quot;' />
                <semantic-value key='&quot;Tempe, AZ&quot;' value='&quot;Arizona&quot;' />
                <semantic-value key='&quot;Travis, CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Travis, CA (From Diamond Princess)&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Tulsa County, OK&quot;' value='&quot;Oklahoma&quot;' />
                <semantic-value key='&quot;Ulster County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Umatilla, OR&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;Unassigned Location, VT&quot;' value='&quot;Vermont&quot;' />
                <semantic-value key='&quot;Unassigned Location, WA&quot;' value='&quot;Washington&quot;' />
                <semantic-value key='&quot;Unknown Location, MA&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Volusia County, FL&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Wake County, NC&quot;' value='&quot;North Carolina&quot;' />
                <semantic-value key='&quot;Washington County, OR&quot;' value='&quot;Oregon&quot;' />
                <semantic-value key='&quot;Washoe County, NV&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;Wayne County, PA&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;Westchester County, NY&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;Williamson County, TN&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;Yolo County, CA&quot;' value='&quot;California&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;US&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]' field-type='quantitative' max='33727077.269642547' min='15259710.306984093' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]' field-type='quantitative' max='12071026.15799059' min='939599.41069631698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' />
              <lod column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]' />
              <color column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]' />
              <geometry column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]</rows>
        <cols>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Geometry (generated)]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;US&quot;</value>
                <value>&quot;Washington&quot;</value>
                <value>7238.0</value>
                <value>&quot;MULTIPOLYGON(((-122.4036 47.6705,-122.3731 47.7292,-122.3945 47.7779,-122.3398 47.8469,-122.3071 47.9491,-122.2535 47.9585,-122.2345 48.0294,-122.3432 48.0976,-122.3951 48.2293,-122.4513 48.2316,-122.479 48.1761,-122.3795 48.0874,-122.5111 48.1325,-122.531 48.2498,-122.4044 48.25,-122.3636 48.2976,-122.4718 48.3519,-122.5031 48.4348,-122.5322 48.3752,-122.5772 48.4466,-122.6572 48.4083,-122.6784 48.4944,-122.6065 48.5212,-122.5119 48.4583,-122.4754 48.462,-122.4925 48.5594,-122.4257 48.6004,-122.4882 48.6454,-122.5193 48.7127,-122.4903 48.7424,-122.6007 48.773,-122.6513 48.7145,-122.6474 48.774,-122.706 48.799,-122.7227 48.8528,-122.7868 48.8858,-122.7471 48.9164,-122.8182 48.9391,-122.758 49.0022,-122.1168 49.0022,-121.9959 49,-121.7602 49.0011,-120.8521 49.0001,-118.1968 49.0002,-117.4295 49.0006,-117.0324 49.0001,-117.0324 48.8466,-117.0351 48.3852,-117.0422 47.9774,-117.0399 47.366,-117.0398 46.4254,-117.0517 46.3438,-116.9879 46.298,-116.956 46.226,-116.963 46.1997,-116.924 46.1709,-116.9347 46.1367,-116.9789 46.08,-116.9427 46.061,-116.916 45.9954,-117.3377 45.9987,-117.4801 45.9979,-117.9969 46.0008,-118.7679 46.001,-118.9871 45.9999,-119.0086 45.9793,-119.1261 45.9329,-119.1955 45.9279,-119.2572 45.9399,-119.3644 45.9216,-119.4319 45.9183,-119.4878 45.9063,-119.5716 45.9255,-119.6234 45.9056,-119.6699 45.8569,-119.9657 45.8244,-120.0702 45.7852,-120.1705 45.762,-120.2108 45.726,-120.2838 45.7212,-120.404 45.6993,-120.5059 45.7,-120.5595 45.7383,-120.5912 45.7465,-120.6536 45.7372,-120.6894 45.7158,-120.8557 45.6715,-120.9159 45.6413,-120.944 45.6564,-121.0849 45.6479,-121.132 45.6098,-121.1838 45.6064,-121.2158 45.6712,-121.3378 45.7049,-121.4017 45.6929,-121.4411 45.6973,-121.5224 45.7247,-121.6312 45.7047,-121.7351 45.694,-121.8113 45.7068,-121.8672 45.6933,-121.9222 45.6491,-122.0037 45.6159,-122.0444 45.6095,-122.1017 45.5835,-122.1838 45.5776,-122.249 45.5477,-122.3315 45.5482,-122.3803 45.5759,-122.4387 45.5636,-122.475 45.5784,-122.6077 45.6081,-122.675 45.618,-122.7638 45.6571,-122.7745 45.6804,-122.7626 45.7282,-122.7695 45.7806,-122.7956 45.81,-122.7855 45.8505,-122.8115 45.9127,-122.814 45.961,-122.8781 46.0313,-122.9041 46.0837,-122.9627 46.1048,-123.0042 46.1338,-123.1159 46.1853,-123.1664 46.189,-123.2131 46.1725,-123.2838 46.151,-123.4989 46.2738,-123.6126 46.2601,-123.7279 46.2896,-123.8755 46.2398,-124.0206 46.3157,-124.0807 46.2672,-124.0561 46.4546,-124.0679 46.635,-124.0236 46.5826,-124.0143 46.3786,-123.9538 46.3781,-123.9052 46.4297,-123.9435 46.4744,-123.8961 46.5498,-123.9589 46.6331,-123.8399 46.7129,-123.8931 46.7502,-123.9682 46.7069,-124.0881 46.7343,-124.0983 46.7942,-124.136 46.9053,-124.0493 46.8913,-123.8231 46.9577,-123.9983 46.9809,-124.0263 47.0302,-124.1514 47.0224,-124.1275 46.9451,-124.175 46.9278,-124.1714 47.0439,-124.2382 47.2887,-124.3208 47.3549,-124.3545 47.5336,-124.4314 47.7469,-124.498 47.8226,-124.6108 47.8807,-124.6752 47.9654,-124.6869 48.095,-124.7335 48.1617,-124.6652 48.3378,-124.7317 48.3814,-124.6367 48.388,-124.3809 48.2847,-124.2513 48.2646,-124.1018 48.2169,-124.0507 48.1778,-123.865 48.1545,-123.6724 48.1627,-123.3759 48.1142,-123.2486 48.1157,-123.1635 48.166,-123.0675 48.1212,-123.0405 48.0808,-122.9179 48.0958,-122.9274 48.0651,-122.8332 48.0104,-122.8912 48.0776,-122.8389 48.1357,-122.7553 48.1443,-122.8004 48.0855,-122.674 47.9172,-122.6105 47.8871,-122.6915 47.8687,-122.7436 47.8091,-122.7725 47.6909,-122.8323 47.6914,-122.7865 47.8043,-122.8752 47.7453,-122.9033 47.6458,-122.9874 47.6061,-123.1124 47.457,-123.1594 47.354,-123.0193 47.3546,-122.9133 47.3886,-122.843 47.4364,-123.0129 47.3791,-123.1194 47.3902,-123.0233 47.5203,-122.9168 47.622,-122.752 47.6672,-122.7482 47.719,-122.6075 47.8569,-122.5658 47.8207,-122.596 47.9201,-122.526 47.9124,-122.4885 47.7436,-122.5609 47.7503,-122.5496 47.721,-122.4797 47.5846,-122.5769 47.6008,-122.5861 47.6401,-122.6074 47.5468,-122.5549 47.5905,-122.5479 47.5245,-122.4948 47.5105,-122.5508 47.4032,-122.5761 47.2571,-122.6735 47.2876,-122.6271 47.4035,-122.6344 47.4035,-122.7282 47.3385,-122.7664 47.2698,-122.7205 47.2211,-122.7685 47.1671,-122.8309 47.2457,-122.7885 47.2998,-122.8021 47.359,-122.819 47.4064,-122.846 47.3114,-122.9274 47.2806,-122.9674 47.1686,-123.0749 47.0974,-122.9188 47.1734,-123.0179 47.0665,-122.9492 47.0993,-122.9044 47.045,-122.9071 47.1405,-122.8149 47.1781,-122.7865 47.1275,-122.6969 47.0975,-122.5905 47.1769,-122.5292 47.2926,-122.4363 47.262,-122.4176 47.3208,-122.3248 47.3485,-122.3284 47.4006,-122.3831 47.4505,-122.3613 47.4814,-122.4211 47.5764,-122.35 47.5576,-122.339 47.6039,-122.4169 47.6421,-122.4036 47.6705),(-122.3722 47.6635,-122.2783 47.6428,-122.2619 47.5214,-122.2186 47.5003,-122.1884 47.5782,-122.2778 47.6482,-122.3722 47.6635)),((-122.5955 48.3973,-122.5984 48.358,-122.5062 48.3093,-122.6606 48.2803,-122.7215 48.2143,-122.6284 48.2225,-122.5679 48.1486,-122.5368 48.0411,-122.5245 48.0971,-122.3763 48.0343,-122.3507 47.9532,-122.3764 47.9072,-122.4315 47.9141,-122.4821 47.9919,-122.607 48.0316,-122.6116 48.1546,-122.6796 48.1551,-122.7699 48.2276,-122.6737 48.3547,-122.6641 48.4022,-122.5955 48.3973)),((-122.4499 47.4797,-122.4273 47.4021,-122.3736 47.3887,-122.528 47.3449,-122.4768 47.5101,-122.4499 47.4797)),((-122.5811 48.5498,-122.6493 48.5288,-122.652 48.5851,-122.5811 48.5498)),((-122.6939 48.7352,-122.6091 48.6404,-122.719 48.7171,-122.6939 48.7352)),((-122.904 48.7146,-122.7421 48.6607,-122.8306 48.6004,-122.9492 48.598,-123.0099 48.6551,-122.904 48.7146)),((-122.8551 47.2943,-122.8421 47.2077,-122.8747 47.1642,-122.9256 47.2365,-122.8551 47.2943)),((-122.8838 48.5727,-122.8462 48.4461,-122.9455 48.4654,-122.8838 48.5727)),((-123.1453 48.6236,-123.0058 48.5521,-123.0056 48.4696,-123.1321 48.498,-123.1763 48.5621,-123.1453 48.6236)),((-123.9722 46.4856,-123.9401 46.4115,-123.9923 46.4478,-123.9722 46.4856)))&quot;</value>
                <value>47.5</value>
                <value>-120.5</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Geometry (generated)]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Latitude (generated)]</field>
                  <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;US&quot;</value>
                <value>&quot;New York&quot;</value>
                <value>12932.0</value>
                <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                <value>43.0</value>
                <value>-75.489999999999995</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{3F8C64AA-5B9F-41FA-A4B5-A5FCE473D7FA}' />
    </worksheet>
    <worksheet name='Recovered Rate '>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data' name='federated.1vr9if50mwid2i1dcetu40ehxzf4' />
          </datasources>
          <datasource-dependencies datasource='federated.1vr9if50mwid2i1dcetu40ehxzf4'>
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[ObservationDate]' derivation='None' name='[none:ObservationDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Recovered:qk]</rows>
        <cols>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:ObservationDate:qk]</cols>
      </table>
      <simple-id uuid='{BABE79DB-1A41-47C9-8FEA-BAB4D702D8F0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CoronaVirus Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='14' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='8' param='horz' type='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='6' type='layout-basic' w='68500' x='800' y='6250'>
                <zone h='46375' id='3' name='Geographical spread' w='68500' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46375' id='5' name='Confirmed Cases for specific locations' w='68500' x='800' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='299' h='92750' id='7' is-fixed='true' param='vert' type='layout-flow' w='29900' x='69300' y='6250'>
                <zone h='20500' id='9' name='Confirmed Cases for specific locations' pane-specification-id='0' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' type='color' w='29900' x='69300' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='66750' id='10' name='Recovered Rate ' w='29900' x='69300' y='26750'>
                  <layout-cache minheight='172' minwidth='160' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='5500' id='11' name='Recovered Rate ' pane-specification-id='2' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]' type='color' w='29900' x='69300' y='93500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='14' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='3' is-fixed='true' name='Geographical spread' w='68500' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66750' id='10' is-fixed='true' name='Recovered Rate ' w='29900' x='69300' y='26750'>
                  <layout-cache minheight='172' minwidth='160' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='11' name='Recovered Rate ' pane-specification-id='2' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]' type='color' w='29900' x='69300' y='93500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='5' is-fixed='true' name='Confirmed Cases for specific locations' w='68500' x='800' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20500' id='9' name='Confirmed Cases for specific locations' pane-specification-id='0' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' type='color' w='29900' x='69300' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19C06044-0132-4183-9CAA-5C999996614F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Confirmed Cases over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2E384F3-FE1E-4AE4-BC07-194F29B70787}' />
    </window>
    <window class='worksheet' name='Recovered Rate '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[mn:ObservationDate:ok]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DBDFFC6-1E6B-4748-985F-A3E73AEFDEB5}' />
    </window>
    <window class='worksheet' name='Death rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Deaths:qk]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECC05633-E741-438C-B02E-427DF57D922F}' />
    </window>
    <window class='worksheet' name='Geographical spread'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{800F770F-4683-4B11-A2D1-C06F30159535}' />
    </window>
    <window class='worksheet' name='Geographical spread in US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D213CB3F-5E5C-4AEA-8325-ED7A8297EAA7}' />
    </window>
    <window class='worksheet' name='Confirmed Cases for specific locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[mn:ObservationDate:ok]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[none:Country/Region:nk]</field>
            <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[yr:ObservationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20C7CB7F-1321-48B1-A71A-598E66300D8A}' />
    </window>
    <window class='dashboard' maximized='true' name='CoronaVirus Dashboard'>
      <viewpoints>
        <viewpoint name='Confirmed Cases for specific locations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Geographical spread'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovered Rate '>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[federated.1vr9if50mwid2i1dcetu40ehxzf4].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CE4F404C-17B4-49A4-890C-984C85081238}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed Cases for specific locations' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Confirmed Cases over Time' width='192'>
      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
      XDyNpmnkF6cYiRfY1VFL/+A4mqaRSaUZm5ri1YtXmZpe/h7z2Twj42P0X79OKr203HWhkGNg
      dJyennPYynJnRlWB/v4BgpX1+AIhWqrDaJrG4uwYU7E4Q0MDjI3NoWka2eQCY5OTjEzM0XPm
      5Ir2Mjq+iGdudMV3a6Zi9E8uoGkabd334KTidN57gMXZCVRVo7KumbogGOUNZGZGyZoORqCC
      9+1pZHhoiJdPnVqfAFiFNP/z69+kvlLlq9/+OV3tlYDDN7/+P6hobKTv5hCattwP49m//gZF
      fzlLyQRz07PYwOUT/8j1eJ579+5nbnKUQslhbriXHxy5zIP7OsjODTOdLGBmYnz1mz+kvbWS
      PCoBXQUcvvbfv0JTUwP4KrGsDODwg2/9OZ6Kevbds5vy8PLNLmND/Siqg2lmmc/kAUjMTZAs
      mCian2jwttEdNC/1NSu7Q5TyCb7y1W+zu6v9tqU2fX03UbWVw6EsLi6xMDd9K0AAu3bdQ2pu
      kqVC6dayqsYG1OwcQ9PJFc9fyENV4PZDtCIavlv9WX5lz757iJSHbx3MBSIVlAW9+AyTqaUs
      qgK6x09NZRmeUBnlYf+t59bX1xEb7uVHhy9TV7k89UldfR3YBa6PzKHYGQCqa+vQFZulVIKp
      qTgOEK6oIuQzuOfefQwPDwFg+MNUlYVorKtjbnKYpXwJRdWoq60BTGzVQH+982JdfT12LoMa
      acQsJgCoqatDNXzs7WygoqJ+ub18f7m9OMUEEzlWfLe1dfW3+p298osfMpVX+dl3/w9OuAZw
      GOk9xYuXRsnPj2HpDpl8iUJigq9975dEvSa2ZfL/AUolsbldh5RXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CoronaVirus Dashboard' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Death rate' width='192'>
      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
      SYVYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Geographical spread' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical spread in US' width='192'>
      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
      +P/7O6+ufuvpOwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recovered Rate ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
